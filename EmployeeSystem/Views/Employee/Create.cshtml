@model Core.Entities.Employee

@{
    ViewData["Title"] = "Create";
}

@*<h1>Create</h1>

<h4>Employee</h4>
<hr />
<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label asp-for="MobileNumber" class="control-label"></label>
                <input asp-for="MobileNumber" class="form-control" />
                <span asp-validation-for="MobileNumber" class="text-danger"></span>
            </div>
        </div>

        <div class="col">
            <div class="form-group">
                <label asp-for="CountryId" class="control-label"></label>
                <input asp-for="CountryId" class="form-control" />
                <span asp-validation-for="CountryId" class="text-danger"></span>
            </div>
            <div class="col">
                <div class="form-group">
                    <label asp-for="StateId" class="control-label"></label>
                    <input asp-for="StateId" class="form-control" />
                    <span asp-validation-for="StateId" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
            </label>
        </div>
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</form>*@

<style>
    .center {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
    }
</style>

<form class="center" asp-action="Create">

    <h1 class="display-4">Employee Registration</h1>

    <hr />
    <br />

    <div class="form-row">
        <div class="form-group col-md-6">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label asp-for="MobileNumber" class="control-label"></label>
            <input asp-for="MobileNumber" class="form-control" />
            <span asp-validation-for="MobileNumber" class="text-danger"></span>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="DOB" class="control-label"></label>
            <input asp-for="DOB" type="date" class="form-control" />
            <span asp-validation-for="DOB" class="text-danger"></span>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="inputContry">Contry</label>
            @Html.DropDownListFor(model => model.CountryId,(List<SelectListItem>)ViewBag.country,"Select a country",new { @class = "form-control" , id="countryDropdown"} )
            <span asp-validation-for="CountryId" class="text-danger"></span>
        </div>
        <div class="form-group col-md-6">
            <label for="inputState" name="StateId">State</label>
            @*@Html.DropDownListFor(model => model.CountryId,(List<SelectListItem>)ViewBag.country,"Select a country",new { @class = "form-control",id="stateDropdown"})*@
            <select class="form-control" id="stateDropdown" name="StateId" disabled>
            <span asp-validation-for="StateId" class="text-danger"></span>
            </select>
        </div>
        <div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
            </label>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Sign in</button>
    <a asp-action="index" class="btn btn-secondary">Back</a>
</form>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>


<script>
    $(document).ready(function () {
        $('#countryDropdown').change(function () {
            var selectedCountryId = $(this).val();

            // Make AJAX request to get states by country
            $.ajax({
                url: '@Url.Action("GetContryByState", "DropDown")',
                type: 'Post',
                data: { CountryId: selectedCountryId },
                success: function (data) {
                    $("#stateDropdown").attr("disabled", false);
                    // Clear existing options
                    $('#stateDropdown').empty();

                    $('#stateDropdown').append($('<option>', {
                        value: '0',
                        text: 'Select a state',
                        disabled: true
                    }));

                    // Add new options based on the returned data
                    $.each(data, function (index, state) {
                        $('#stateDropdown').append($('<option>', {
                            value: state.stateId,
                            text: state.stateName
                        }));
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
